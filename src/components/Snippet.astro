---
interface Props {
  title?: string
}

const { title = 'Ergebnis' } = Astro.props
---

<section class='snippet expressive-code'>
  <div class='sn-title'># {title}</div>

  <slot name='css' />
  <slot name='settings' />

  <slot />
</section>

<style>
  @scope (.snippet) {
    :scope {
      --sn-clr-bg: var(--ec-codeBg, #24292e);
      --sn-clr-text: var(--ec-codeFg, #e1e4e8);
      --sn-clr-border: var(--ec-brdCol, rgb(255 255 255 / 0.3));

      display: block;
      background-color: var(--sn-clr-bg);
      color: var(--sn-clr-text);
      border: 1px solid var(--sn-clr-border);
      border-radius: var(--radius);
      padding-block: var(--sp-s);
      padding-inline: var(--sp);
      font-size: var(--fs);

      .sn-title {
        display: block;
        font-family: var(--ff-code);
        font-size: var(--fs-xs);
        color: var(--clr-code-title);
        line-height: 1;
        margin-block: 3em var(--sp-s);
        text-transform: uppercase;

        &:first-child {
          margin-block-start: 0;
        }
      }

      .sn-element {
        background-color: var(--clr-primary);
        color: var(--clr-inverse);
        border: 1px solid var(--sn-clr-border);
        border-radius: var(--radius);
        padding-block: var(--sp-xs);
        padding-inline: var(--sp);

        &:has(.sn-element) & {
          background-color: rgb(0 0 0 / 0.2);
        }
      }

      .sn-image {
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 400 400' preserveAspectRatio='none'%3E%3Cpath d='m0 0 400 400M400 0 0 400' stroke='%23fff' stroke-width='2px' stroke-opacity='0.5'/%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-size: 100% 100%;
      }

      .sn-settings {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: var(--sp-xs);
        margin-block-end: var(--sp);

        border: 1px solid var(--sn-clr-border);
        background-color: var(--clr-bg-card);
        border-radius: var(--radius);
        padding-block: var(--sp-s);
        padding-inline: var(--sp);

        .sn-value {
          display: grid;
          grid-template-columns: 1fr 10em 1fr;
          gap: var(--sp);

          label {
            text-align: end;
          }
        }

        [type='range'] {
          cursor: pointer;
        }
      }

      .sn-mark {
        background-color: var(--clr-marker);
        /* outline: 2px solid var(--clr-warning); */
      }
    }
  }

  .snippet + .snippet {
    margin-block-start: var(--sp);
  }
</style>
