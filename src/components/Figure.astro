---
import type { ImageMetadata } from 'astro'
import { Image } from 'astro:assets'
import { markdown } from '@astropub/md'

interface Props {
  imagePath?: string
  imageFormat?: string
  alt?: string
  caption?: string | boolean
  lazy?: boolean
}

const { imagePath, imageFormat, caption, alt, lazy = true } = Astro.props

const images = import.meta.glob<{ default: ImageMetadata }>(
  '/src/images/**/*.{jpeg,jpg,png}'
)

if (imagePath !== undefined && !images[imagePath]) {
  throw new Error(
    `Das Bild "${imagePath}" existiert im angegeben Verzeichnis nicht.`
  )
}
---

<figure>
  {
    imagePath !== undefined && images[imagePath] ? (
      <Image
        src={images[imagePath]()}
        widths={[380, 670, 710]}
        sizes={`(max-width: 480px) 380px, (max-width: 800) 670px, 710px`}
        format={imageFormat ? 'png' : undefined}
        alt={alt}
        loading={lazy ? 'lazy' : 'eager'}
      />
    ) : (
      <slot />
    )
  }

  {
    caption && typeof caption === 'string' ? (
      <figcaption>{await markdown(caption)}</figcaption>
    ) : null
  }
</figure>
