@use './mixins';

/*
┌──────────────────────────────────┐
  HEADLINES
└──────────────────────────────────┘
*/

:is(h1, h2, h3, h4) {
  position: relative;
  font-family: var(--ff-headings);
  font-weight: var(--fw-headings);
  font-variation-settings: var(--fvs-headings);

  margin-block: max(2em, var(--sp-content)) 0.5em;
  line-height: var(--lh-s);
}

h1 {
  font-size: 2em;
  margin-block: 0 0.8em;
  text-wrap: balance;

  .stage:not(:has(aside)) &:has(+ .lead) {
    max-inline-size: var(--title-max-size);
    text-wrap: pretty;
  }
}

h2 {
  font-size: 1.6em;
}

h3 {
  font-size: 1.2em;
}

h4 {
  font-size: 0.8em;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin-block-end: 1em;
}

.title-centered {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--sp);
  text-align: center;

  font-size: var(--fs);
  font-weight: var(--fw-bold);
  text-transform: uppercase;
  letter-spacing: 0.1em;
  margin-block: var(--sp-l) var(--sp-m);

  &::before,
  &::after {
    display: block;
    content: '';
    block-size: 1px;
    background-color: var(--clr-line);
  }

  &::before {
    flex: 0 0 var(--sp-content);
  }

  &::after {
    flex: 1 1 auto;
  }
}

sup {
  line-height: 1;
  line-height: 1;
  margin-inline-start: 0.1em;

  a {
    font-size: 0.8125rem;
    color: var(--clr-primary);

    &:target {
      background: var(--clr-marker) !important;
    }
  }
}

.t-small,
small {
  font-size: var(--fs-s);
}

::selection {
  background-color: var(--clr-selection);
}

/*
┌──────────────────────────────────┐
  CODE
└──────────────────────────────────┘
*/

code {
  display: inline-block;
  font-family: var(--ff-code);
  font-size: 1em;
  font-variation-settings:
    'wght' 700,
    'slnt' 0;
}

.astro-code {
  position: relative;
  display: block;
  padding-block: var(--sp-s);
  padding-inline: var(--sp);
  border-radius: var(--radius);
  overflow: hidden;

  code {
    display: block;
    font-size: 1rem;
    font-variation-settings:
      'wght' 300,
      'slnt' 0;
  }

  &::before {
    display: block;
    content: '# ' attr(data-language);
    font-size: var(--fs-xs);
    line-height: 1;
    color: var(--clr-code-title);
    text-transform: uppercase;
    margin-block-end: var(--sp-s);
  }

  .copy-code-btn {
    --button-size: 1.875rem;
    --icon-size: 1rem;

    all: unset;

    display: grid;
    place-items: center;

    position: absolute;
    inset-block-start: var(--sp-xs);
    inset-inline-end: var(--sp-xs);
    z-index: 2;

    block-size: var(--button-size);
    inline-size: var(--button-size);

    background-color: var(--clr-primary);
    color: var(--clr-inverse);
    border-radius: var(--radius) 0 0 0;
    transition: var(--transition);
    line-height: 1;

    cursor: pointer;

    svg {
      display: block;
      fill: currentColor;
      block-size: var(--icon-size);
    }

    &::before {
      position: absolute;
      display: block;
      content: 'Kopieren';
      inset-block-start: clac(var(--sp-s) - var(--sp-xs));
      inset-inline-end: 3rem;
      z-index: 1;
      line-height: 1;

      font-size: var(--fs-xs);
      color: var(--clr-code-title);
      text-align: right;
      opacity: 0;

      transform: translateX(150%);
      transition:
        transform var(--transition),
        opacity var(--transition);
    }

    &:hover {
      background-color: var(--clr-inverse);
      color: var(--clr-primary);

      &::before {
        transform: translateX(0);
        opacity: 1;
      }
    }
  }

  figure & {
    margin-block: 0;

    + .astro-code {
      margin-block-start: var(--sp);
    }
  }

  html[data-theme='dark'] & {
    background-color: rgb(0 0 0 / 0.5) !important;
  }
}

/*
┌──────────────────────────────────┐
  KBD
└──────────────────────────────────┘
*/

kbd {
  position: relative;
  inset-block-start: -0.15em;

  display: inline-block;
  border-radius: 0.2em;
  border: 1px solid var(--clr-kb-border);
  box-shadow: var(--clr-kb-shadow);

  font-size: var(--fs-s);
  font-weight: var(--fw);
  line-height: 1;
  background-color: var(--clr-kb-bg);
  color: var(--clr-kb-text);

  padding-block: 0.2em;
  padding-inline: 0.6em;
  margin-inline: 0.3ch;
  white-space: nowrap;
  vertical-align: middle;
}

/*
┌──────────────────────────────────┐
  BLOCKQUOTES
└──────────────────────────────────┘
*/

blockquote {
  background-color: var(--clr-bg-card);
  margin-block: var(--sp-content);
  margin-inline: 0;
  padding-block: var(--sp);
  padding-inline: var(--sp) var(--sp-content);
  border-inline-start: 1ch solid var(--clr-primary);
  margin-trim: block;

  @supports not (margin-trim: block) {
    > :is(h2, h3):first-child {
      margin-block-start: 0;
    }

    p:last-child {
      margin-block-end: 0;
    }
  }
}

.sr-only {
  position: absolute;
  block-size: 1px;
  inline-size: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  white-space: nowrap;
  border-width: 0;
}

.image-with-text {
  --image-size: min(150px, 40vw);

  border-block-start: 1px solid var(--clr-line);
  border-block-end: 1px solid var(--clr-line);
  margin-block-end: var(--sp-content);
  padding-block: var(--sp);
  contain: layout;
  font-size: var(--fs-s);

  p:last-child {
    margin-block-end: 0;
  }

  img {
    display: block;
    float: left;

    block-size: var(--image-size);
    inline-size: var(--image-size);

    margin-block: 0 var(--sp);
    margin-inline: 0 var(--sp);

    order: 1;

    clip-path: circle();
    shape-outside: circle();

    box-shadow: var(--image-shadow);
  }

  @include mixins.respond('m') {
    img {
      margin-inline: calc(var(--sp) * -1) var(--sp);
    }
  }
}
