---
import { getCollection, render } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import BlogPostLayout from '@layouts/BlogPostLayout.astro'
import RelatedArticles from '@components/RelatedArticles.astro'

export async function getStaticPaths() {
  const posts = await getCollection('tutorials')

  return posts.map((post) => ({
    params: { id: post.id },
    props: post
  }))
}

const post = Astro.props
const currentPathname = post.id.replace('/tutorials/', '')
const { Content, headings, remarkPluginFrontmatter } = await render(post)
const minutesToRead = remarkPluginFrontmatter.minutesToRead
const readingTime = {
  minutes: Number(minutesToRead.minutes.toFixed(0)),
  words: minutesToRead.words
}

export const layout = 'wide'

post.data.readingTime = readingTime
post.data.headings = headings as unknown as string[]
---

{
  import.meta.env.PROD && post.data.isDraft === true ? (
    <BaseLayout redirect={true} />
  ) : (
    <BlogPostLayout {...post.data} layout={layout}>
      <Content slot='article' />

      <RelatedArticles
        tags={post.data.tags}
        currentPathname={currentPathname}
        slot='related'
      />
    </BlogPostLayout>
  )
}
