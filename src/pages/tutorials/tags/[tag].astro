---
import { type CollectionEntry, getCollection } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import ArticleCard from '@components/ArticleCard.astro'
import Tags from '@components/Tags.astro'
import { getTagLongform } from '../../../const'

export async function getStaticPaths() {
  const posts = await getCollection('tutorials', ({ data }) => {
    return import.meta.env.PROD ? data.isDraft !== true : true
  })
  const tags = [...new Set(posts.flatMap((post) => post.data.tags))]

  return tags.map((tag) => {
    const filteredPosts = posts.filter((post) =>
      post.data.tags?.includes(tag as string)
    )

    filteredPosts.sort(
      (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
    )

    return {
      params: { tag },
      props: { posts: filteredPosts, tags: tags }
    }
  })
}

interface Props {
  title: string
  posts: CollectionEntry<any>[]
  tags: string[]
}

const { tag } = Astro.params
const { posts, tags } = Astro.props

const title = `Tutorials zum Thema ${getTagLongform(tag ?? '')}`
const description = `Liste aller Tutorials mit dem Stichwort ${tag}.`
const layout = 'wide'
---

<BaseLayout title={title} description={description} layout={layout}>
  <h1>{title}</h1>

  <Tags tags={tags} />

  {
    posts.length > 0 ? (
      <section class='l-articles'>
        {posts.map((post) => (
          <ArticleCard article={post} />
        ))}
      </section>
    ) : (
      <p>No posts yet.</p>
    )
  }
</BaseLayout>
