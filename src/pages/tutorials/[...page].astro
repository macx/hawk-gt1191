---
import { getCollection } from 'astro:content'
import type { CollectionEntry } from 'astro:content'
import BaseLayout from '@layouts/BaseLayout.astro'
import { widont } from '@plugins/remark-widont.mjs'
import { formatTitle } from '@plugins/remark-widont.mjs'
import ArticleCard from '@components/ArticleCard.astro'
import Pagination from '@components/Pagination.astro'
import Lead from '@components/Lead.astro'
import Button from '@components/Button.astro'

const { page } = Astro.props
const articles = (page as any).data

const title: string = 'Tutorials: Moderne Websites mit HTML und CSS erstellen'
const description: string =
  'Du hast eine konkrete Idee, weißt aber nicht, wie du sie umsetzen sollst? Mit diesen Anleitungen gelingt dir die Umsetzung.'
const visible: boolean = true
export const limit: number = 6

export async function getStaticPaths({ paginate }: any) {
  const articles: CollectionEntry<'tutorials'>[] = await getCollection(
    'tutorials',
    ({ data }) => {
      return import.meta.env.PROD ? data.isDraft !== true : true
    }
  )
  articles.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())

  return paginate(articles, { pageSize: limit })
}
---

{
  articles.length > 0 ? (
    <BaseLayout
      title={title}
      description={description}
      visible={visible}
      layout='wide'
    >
      <div class='title-header'>
        <h1>
          <Fragment set:html={formatTitle(title)} />
        </h1>
      </div>

      <blockquote class='text-and-button'>
        <div>
          <p class='t-small'>
            Die Tutorials sind nach Veröffentlichungsdatum&nbsp;sortiert.
          </p>
          Siehe dir die <b>Lernpfade</b> an. Dort bauen die Tutorials
          aufeinander&nbsp;auf.
        </div>

        <div>
          <Button
            label='Zu den Lernpfaden'
            href='/tutorials/lernpfade/grundlagen'
            type='link'
            primary={true}
          />
        </div>
      </blockquote>

      <section class='l-articles'>
        {articles.map((article: CollectionEntry<'tutorials'>) => (
          <ArticleCard article={article} />
        ))}
      </section>

      <Pagination
        length={(page as any).lastPage}
        currentUrl={(page as any).url.current}
        currentPage={(page as any).currentPage}
        firstUrl={`/tutorials`}
        prevUrl={(page as any).url.prev}
        nextUrl={(page as any).url.next}
        lastUrl={`/tutorials/${(page as any).lastPage}`}
      />
    </BaseLayout>
  ) : (
    <BaseLayout redirect={true} />
  )
}
