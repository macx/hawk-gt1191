---
import '../styles/main.scss'

import Header from '@components/Header.astro'
import Footer from '@components/Footer.astro'
import TableOfContent from '@components/TableOfContents.astro'
import Aside from '@components/Aside.astro'
import Metadata from '@components/Metadata.astro'

type Layout = 'wide' | 'standard'

const { headings, layout = 'standard' as Layout, redirect } = Astro.props
const { title, description, pubDate, toc, aside, cover, ogType } =
  Astro.props.frontmatter || Astro.props

const asideConfig = aside ? aside : false
---

<!doctype html>
<html lang='de'>
  <head>
    <Metadata
      title={title}
      description={description}
      image={cover}
      pubDate={pubDate}
      redirect={redirect}
      type={ogType}
    />
  </head>
  <body id='top'>
    <Header />

    <main id='main'>
      <div class:list={['stage', { 'with-articles': asideConfig }]}>
        <div class:list={['content', { wide: layout === 'wide' }]}>
          <slot />
        </div>

        {toc && headings && <TableOfContent headings={headings} />}
        {asideConfig && <Aside tutorials={asideConfig.tutorials} />}
      </div>

      <slot name='page-footer' />
    </main>

    <Footer />

    <script>
      const codeBlocks = document.querySelectorAll('pre')
      const copyIcon =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 -960 960 960"><path d="M360-240q-33 0-56.5-23.5T280-320v-480q0-33 23.5-56.5T360-880h360q33 0 56.5 23.5T800-800v480q0 33-23.5 56.5T720-240H360Zm0-80h360v-480H360v480ZM200-80q-33 0-56.5-23.5T120-160v-560h80v560h440v80H200Zm160-240v-480 480Z"/></svg>'
      const copiedIcon =
        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 -960 960 960"><path d="M382-240 154-468l57-57 171 171 367-367 57 57-424 424Z"/></svg>'

      async function copyCode(codeBlock: HTMLElement) {
        let copiedCode = codeBlock.cloneNode(true) as HTMLElement

        // remove copy button
        const copyButton = copiedCode.querySelector('button.copy-code-btn')
        if (!copyButton) return
        copiedCode.removeChild(copyButton as Node)

        const html = copiedCode.outerHTML.replace(/<[^>]*>?/gm, '')
        const codeBlockCopyButton = codeBlock.querySelector(
          'button.copy-code-btn'
        )

        codeBlockCopyButton!.innerHTML = copiedIcon
        setTimeout(function () {
          codeBlockCopyButton!.innerHTML = copyIcon
        }, 2000)

        const parsedHTML = htmlDecode(html)

        if (parsedHTML !== null) {
          await navigator.clipboard.writeText(parsedHTML)
        }
      }

      function htmlDecode(input: string) {
        const doc = new DOMParser().parseFromString(input, 'text/html')
        return doc.documentElement.textContent
      }

      if (codeBlocks.length > 0) {
        codeBlocks.forEach((codeBlock) => {
          if (!navigator.clipboard) {
            return
          }

          let button = document.createElement('button')
          button.className = 'copy-code-btn'
          button.innerHTML = copyIcon
          button.title = 'Code in die Zwischenablage kopieren'
          codeBlock.appendChild(button)

          button.addEventListener('click', async () => {
            await copyCode(codeBlock)
          })
        })
      }
    </script>
  </body>
</html>
